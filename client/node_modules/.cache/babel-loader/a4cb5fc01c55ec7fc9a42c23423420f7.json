{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests';\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  _s();\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n  const submitLaunch = useCallback(async e => {\n    e.preventDefault();\n    // setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n  const abortLaunch = useCallback(async id => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch\n  };\n}\n_s(useLaunches, \"8KpHIIq7AzMRt3raNpddjI+KYXY=\");\nexport default useLaunches;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetLaunches","httpSubmitLaunch","httpAbortLaunch","useLaunches","onSuccessSound","onAbortSound","onFailureSound","launches","saveLaunches","isPendingLaunch","setPendingLaunch","getLaunches","fetchedLaunches","submitLaunch","e","preventDefault","data","FormData","target","launchDate","Date","get","mission","rocket","response","success","setTimeout","abortLaunch","id"],"sources":["/Users/mohdkamleh/Desktop/node practise/client/src/hooks/useLaunches.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n} from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n\n  const submitLaunch = useCallback(async (e) => {\n    e.preventDefault();\n    // setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target,\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n\n  const abortLaunch = useCallback(async (id) => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  };\n}\n\nexport default useLaunches;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,SACEC,eAAe,EACfC,gBAAgB,EAChBC,eAAe,QACV,YAAY;AAEnB,SAASC,WAAW,CAACC,cAAc,EAAEC,YAAY,EAAEC,cAAc,EAAE;EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACU,eAAe,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMY,WAAW,GAAGd,WAAW,CAAC,YAAY;IAC1C,MAAMe,eAAe,GAAG,MAAMZ,eAAe,EAAE;IAC/CQ,YAAY,CAACI,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACda,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAME,YAAY,GAAGhB,WAAW,CAAC,MAAOiB,CAAC,IAAK;IAC5CA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACnC,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,CAAC;IACnD,MAAMC,OAAO,GAAGN,IAAI,CAACK,GAAG,CAAC,cAAc,CAAC;IACxC,MAAME,MAAM,GAAGP,IAAI,CAACK,GAAG,CAAC,aAAa,CAAC;IACtC,MAAMH,MAAM,GAAGF,IAAI,CAACK,GAAG,CAAC,kBAAkB,CAAC;IAC3C,MAAMG,QAAQ,GAAG,MAAMvB,gBAAgB,CAAC;MACtCkB,UAAU;MACVG,OAAO;MACPC,MAAM;MACNL;IACF,CAAC,CAAC;;IAEF;IACA,MAAMO,OAAO,GAAG,KAAK;IACrB,IAAIA,OAAO,EAAE;MACXd,WAAW,EAAE;MACbe,UAAU,CAAC,MAAM;QACfhB,gBAAgB,CAAC,KAAK,CAAC;QACvBN,cAAc,EAAE;MAClB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLE,cAAc,EAAE;IAClB;EACF,CAAC,EAAE,CAACK,WAAW,EAAEP,cAAc,EAAEE,cAAc,CAAC,CAAC;EAEjD,MAAMqB,WAAW,GAAG9B,WAAW,CAAC,MAAO+B,EAAE,IAAK;IAC5C,MAAMJ,QAAQ,GAAG,MAAMtB,eAAe,CAAC0B,EAAE,CAAC;;IAE1C;IACA,MAAMH,OAAO,GAAG,KAAK;IACrB,IAAIA,OAAO,EAAE;MACXd,WAAW,EAAE;MACbN,YAAY,EAAE;IAChB,CAAC,MAAM;MACLC,cAAc,EAAE;IAClB;EACF,CAAC,EAAE,CAACK,WAAW,EAAEN,YAAY,EAAEC,cAAc,CAAC,CAAC;EAE/C,OAAO;IACLC,QAAQ;IACRE,eAAe;IACfI,YAAY;IACZc;EACF,CAAC;AACH;AAAC,GA5DQxB,WAAW;AA8DpB,eAAeA,WAAW"},"metadata":{},"sourceType":"module"}